
apply plugin: 'java'
apply plugin: 'kotlin'

apply plugin: 'io.github.rodm.teamcity-server'
apply plugin: 'io.github.rodm.teamcity-environments'

ext {
    downloadsDir = project.findProperty('downloads.dir') ?: "$rootDir/downloads"
    serversDir = project.findProperty('servers.dir') ?: "$rootDir/servers"
}

dependencies {
    implementation(project(':common'))

    provided "org.jetbrains.teamcity.internal:web:$teamcity_version"
    provided "org.jetbrains.teamcity:oauth:$teamcity_version"

    agent project(path: ':agent', configuration: 'plugin')

    testImplementation(testFixtures(project(':common')))
}

teamcity {
    version = teamcity_version

    server {
        descriptor {
            name = 'teamcity-sccache-support'
            displayName = 'sccache support'
            description = 'Provides support for Shared Compilation Cache'
            version = project.version

            vendorName = 'JetBrains'
            vendorUrl = 'https://www.jetbrains.com'

            useSeparateClassloader = true
            allowRuntimeReload = true
            nodeResponsibilitiesAware = true
        }
        archiveName = "teamcity-sccache-plugin.zip"
    }

    environments {
        downloadsDir = project.downloadsDir
        baseHomeDir = project.serversDir
        baseDataDir = 'data'

        TeamCity2020_1 {
            version = '2020.1.5'
            serverOptions = "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5600 -DTC.res.disableAll=true -Dteamcity.development.mode=true -Dteamcity.superUser.token.saveToFile=true"
            agentOptions = "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5601"
        }
    }
}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
    kotlinOptions { jvmTarget = '1.8' }
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
}

// Do not include version into plugin archive name
project.tasks.getByName('serverPlugin').archiveVersion = ''